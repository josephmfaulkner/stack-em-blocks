[{"/home/joseph/Documents/projects/stack-em-blocks/src/index.js":"1","/home/joseph/Documents/projects/stack-em-blocks/src/App.js":"2","/home/joseph/Documents/projects/stack-em-blocks/src/reportWebVitals.js":"3","/home/joseph/Documents/projects/stack-em-blocks/src/store/index.js":"4","/home/joseph/Documents/projects/stack-em-blocks/src/screens/MainGame.js":"5","/home/joseph/Documents/projects/stack-em-blocks/src/sound/SoundManagerComponent.js":"6","/home/joseph/Documents/projects/stack-em-blocks/src/screens/MainMenu.js":"7","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/game.js":"8","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/sound.js":"9","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/controls.js":"10","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/gameStatus.js":"11","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/sound.js":"12","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/gameGrid.js":"13","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/GameGridDisplay.js":"14","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/InputControls.js":"15","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/PauseButton.js":"16","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/popup/PopupPaused.js":"17","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/popup/PopupGameOver.js":"18","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/index.js":"19","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/misc.js":"20","/home/joseph/Documents/projects/stack-em-blocks/src/sound/soundManager.js":"21","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/block.js":"22","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/input.js":"23","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/moveValidations.js":"24","/home/joseph/Documents/projects/stack-em-blocks/src/sound/soundNames.js":"25","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/gameGrid.js":"26","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameStatusHelper.js":"27","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameGridHelper.js":"28","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameBlockHelper.js":"29","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/util.js":"30","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/blockConstants.js":"31","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/blockActions.js":"32","/home/joseph/Documents/projects/stack-em-blocks/src/sound/SoundLoader.js":"33"},{"size":623,"mtime":1613257610958,"results":"34","hashOfConfig":"35"},{"size":882,"mtime":1613257610958,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1613257610958,"results":"37","hashOfConfig":"35"},{"size":801,"mtime":1613257610962,"results":"38","hashOfConfig":"35"},{"size":3521,"mtime":1613257610958,"results":"39","hashOfConfig":"35"},{"size":517,"mtime":1613257610958,"results":"40","hashOfConfig":"35"},{"size":812,"mtime":1613257610958,"results":"41","hashOfConfig":"35"},{"size":2146,"mtime":1613257610962,"results":"42","hashOfConfig":"35"},{"size":691,"mtime":1613257610962,"results":"43","hashOfConfig":"35"},{"size":3053,"mtime":1613257610962,"results":"44","hashOfConfig":"35"},{"size":1229,"mtime":1613257610962,"results":"45","hashOfConfig":"35"},{"size":2391,"mtime":1613257610962,"results":"46","hashOfConfig":"35"},{"size":2411,"mtime":1613257610962,"results":"47","hashOfConfig":"35"},{"size":1253,"mtime":1613257610958,"results":"48","hashOfConfig":"35"},{"size":1461,"mtime":1613257610958,"results":"49","hashOfConfig":"35"},{"size":503,"mtime":1613257610958,"results":"50","hashOfConfig":"35"},{"size":1230,"mtime":1613257610958,"results":"51","hashOfConfig":"35"},{"size":1128,"mtime":1613257610958,"results":"52","hashOfConfig":"35"},{"size":2625,"mtime":1613257610962,"results":"53","hashOfConfig":"35"},{"size":1078,"mtime":1613257610962,"results":"54","hashOfConfig":"35"},{"size":2806,"mtime":1613257610958,"results":"55","hashOfConfig":"35"},{"size":1091,"mtime":1613257610962,"results":"56","hashOfConfig":"35"},{"size":1028,"mtime":1613257610962,"results":"57","hashOfConfig":"35"},{"size":4204,"mtime":1613257610962,"results":"58","hashOfConfig":"35"},{"size":863,"mtime":1613257610962,"results":"59","hashOfConfig":"35"},{"size":634,"mtime":1613257610962,"results":"60","hashOfConfig":"35"},{"size":884,"mtime":1613257610962,"results":"61","hashOfConfig":"35"},{"size":917,"mtime":1613257610962,"results":"62","hashOfConfig":"35"},{"size":1841,"mtime":1613257610962,"results":"63","hashOfConfig":"35"},{"size":186,"mtime":1613257610958,"results":"64","hashOfConfig":"35"},{"size":792,"mtime":1613257610962,"results":"65","hashOfConfig":"35"},{"size":1454,"mtime":1613257610962,"results":"66","hashOfConfig":"35"},{"size":3033,"mtime":1613257610958,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"msub1j",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"/home/joseph/Documents/projects/stack-em-blocks/src/index.js",[],["152","153"],"/home/joseph/Documents/projects/stack-em-blocks/src/App.js",["154"],"import './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport MainMenu from \"./screens/MainMenu\";\nimport MainGame from \"./screens/MainGame\";\n\nimport SoundManagerComponent from \"./sound/SoundManagerComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n            <Route path=\"/singlePlayerGame\">\n              <MainGame />\n            </Route>\n            <Route path=\"/\">\n              <MainMenu />\n            </Route>\n          </Switch>\n      </Router>\n      <SoundManagerComponent />\n      <div style={{position : 'fixed', bottom: 0, right: 0}}>\n        <p style={{backgroundColor: 'white', margin: 0}}>\n          {process.env.REACT_APP_ENVIRONMENT_NAME}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/joseph/Documents/projects/stack-em-blocks/src/reportWebVitals.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/index.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/screens/MainGame.js",["155","156"],"import React from \"react\";\n\nimport {\n    withRouter,\n} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { startGame, restartGame, togglePauseGame, gameOver, exitGame } from '../store/actions/gameStatus';\nimport { getGameStateAsGrid } from \"../store/utils/gameGrid\";\n\nimport GameGridDisplay from \"./components/GameGridDisplay\";\nimport InputControls from \"./components/InputControls\";\nimport PauseButton from \"./components/PauseButton\";\n\nimport PopupPaused from \"./components/popup/PopupPaused\";\nimport PopupGameOver from \"./components/popup/PopupGameOver\";\n\n\nimport \"./MainGame.css\";\nclass MainGame extends React.Component {\n    \n    constructor(props)\n    {\n        super(props)\n        this.state = { \n            maxWidth: 0\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        \n    }\n\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n        this.props.startGame();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n      \n    updateWindowDimensions() {\n        if(this.props.gameGrid != undefined) {\n            const rowsNum = this.props.gameGrid.length; if(rowsNum <= 0) {return;}\n            const colsNum = this.props.gameGrid[0].length;\n            const blockWidth = window.innerHeight / rowsNum;\n            const maxWidth = blockWidth * colsNum;\n            this.setState({ maxWidth });\n        }\n    }\n\n   onResumeClick() {\n        this.props.togglePauseGame();\n   } \n\n   onRestartClick() {\n       this.props.restartGame();\n   } \n\n   onMainMenuClick() {\n        this.props.exitGame();\n        this.props.history.push(\"/\");\n   }\n\n   render()\n   {\n       let modalOpen = this.props.paused || this.props.gameOver;\n       let className = modalOpen ? \"mainGameContainer PopupBackgroundContent\" : \"mainGameContainer\";\n       return (   \n           <div>\n            <PauseButton isVisible={!modalOpen} onClick={this.onResumeClick.bind(this)}/>   \n            <div className={className} style={{maxWidth : this.state.maxWidth}}>\n                \n                <GameGridDisplay gameGrid={this.props.gameGrid} maxWidth={this.state.maxWidth}/>\n                <PopupPaused \n                        modalOpen={this.props.paused && ! this.props.gameOver} \n                        onResumeClick={this.onResumeClick.bind(this)} \n                        onRestartClick={this.onRestartClick.bind(this)} \n                        onMainMenuClick={this.onMainMenuClick.bind(this)}\n                    />\n                <PopupGameOver \n                        modalOpen={this.props.gameOver} \n                        onRestartClick={this.onRestartClick.bind(this)} \n                        gameScore={this.props.gameScore}\n                        onMainMenuClick={this.onMainMenuClick.bind(this)}\n                    />\n                <InputControls />\n            </div>\n           </div>    \n\n       );\n   }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      gameScore: state.game.stats.score,\n      gameLevel: state.game.stats.level,  \n      gameGrid: getGameStateAsGrid(state.game),\n      playerBlock: state.game.playerBlock,\n      paused : state.game.stats.paused,\n      gameOver : state.game.stats.gameOver\n    }\n};\n  \nconst mapDispatchToProps = { startGame, togglePauseGame, restartGame, exitGame };\n\nexport default connect( mapStateToProps, mapDispatchToProps )(withRouter(MainGame));","/home/joseph/Documents/projects/stack-em-blocks/src/sound/SoundManagerComponent.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/screens/MainMenu.js",["157"],"import React from \"react\";\nimport \"./MainMenu.css\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nclass MainMenu extends React.Component {\n\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        return( \n        <div className=\"MainMenu\">\n            <div className=\"Content\">\n                <div className=\"header\">\n                    <h1>\n                        <i className=\"fas fa-cubes\"></i>\n                    </h1>\n                    <h1>Stack Em Blocks!</h1>\n                </div>\n                <div className=\"buttons\">\n                    <Link to=\"/singlePlayerGame\">\n                        <i className=\"fas fa-play-circle\"></i>\n                    </Link>\n                </div>\n\n            </div>\n        </div>\n        );\n    }\n\n}\n\nexport default MainMenu;","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/game.js",["158"],"import { newBlank2dArray, copy2dArray } from \"../utils/misc\";\n\nimport { MOVE_BLOCK, ROTATE_BLOCK, REPLACE_PLAYER_BLOCK } from \"../actions/block\";\nimport { CLEAR_FILLED_ROWS, SHIFT_CLEARED_ROWS, ADD_PLAYER_BLOCK_TO_GRID } from \"../actions/gameGrid\";\nimport { INCREMENT_GAME_SCORE, RESTART_GAME, PAUSE_RESUME_GAME, GAME_OVER, EXIT_GAME } from \"../actions/gameStatus\";\n\n\nimport GameBlockHelper from \"./helpers/GameBlockHelper\";\nimport GameGridHelper from \"./helpers/GameGridHelper\";\nimport GameStatusHelper from \"./helpers/GameStatusHelper\";\n\n\nconst defaultState = {\n    grid: newBlank2dArray(10,20),\n    playerBlock: {\n        xPos: 0, \n        yPos: 0,\n        blockData: null\n    },\n    stats: {\n        paused: false,\n        gameOver: false,\n        level: 1,\n        score: 0\n    } \n}\n\nconst game = function(state = defaultState, action)\n{  \n\n    switch(action.type)\n    {\n        case REPLACE_PLAYER_BLOCK:\n            const newPlayerBlock = action.payload;\n            return GameBlockHelper.replacePlayerBlock(state, newPlayerBlock);\n        case MOVE_BLOCK:\n            const moveDirection = action.payload;\n            return GameBlockHelper.moveBlock(state, moveDirection);\n        case ROTATE_BLOCK:\n            const rotateDirection = action.payload;\n            return GameBlockHelper.rotateBlock(state, rotateDirection);\n        case ADD_PLAYER_BLOCK_TO_GRID: \n            return GameGridHelper.addBlockToGrid(state);      \n        case CLEAR_FILLED_ROWS:\n            return GameGridHelper.clearFilledRows(state);\n        case SHIFT_CLEARED_ROWS:\n            return GameGridHelper.shiftClearedRowsDown(state);\n        case INCREMENT_GAME_SCORE:\n            const incrementAmount = action.payload; \n            return GameStatusHelper.incrementGameScore(state, incrementAmount);\n        case PAUSE_RESUME_GAME:\n            return GameStatusHelper.togglePaused(state);\n        case GAME_OVER:\n            return GameStatusHelper.gameOver(state);\n        case RESTART_GAME:\n            return defaultState;\n        case EXIT_GAME:\n            return defaultState;\n        default:\n            return state;\n    }\n}\n\nexport default game;","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/sound.js",["159","160","161","162","163","164","165","166"],"import { connect } from 'react-redux';\nimport { call, select, put, takeEvery, takeLatest, all } from 'redux-saga/effects'\nimport getSoundManager from \"../../sound/soundManager\";\nimport { LOAD_SOUNDS, PLAY_SOUND_EFFECT } from \"../actions/sound\";\n\nexport function* loadSoundsHandler(action) {\n    const actionPayload = action.payload; \n    getSoundManager().loadSounds(actionPayload);\n}\n\nexport function* playSoundEffectHandler(action) {\n    const actionPayload = action.payload;\n    getSoundManager().playSoundEffect(actionPayload);\n}\n\nexport function* gameSoundMain() {\n    yield takeLatest(LOAD_SOUNDS, loadSoundsHandler);\n    yield takeLatest(PLAY_SOUND_EFFECT, playSoundEffectHandler);\n}\n","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/controls.js",["167","168","169","170","171"],"import { connect } from 'react-redux';\nimport { call, select, put, takeEvery, takeLatest } from 'redux-saga/effects'\n\nimport { INPUT_MOVE, INPUT_ROTATE, INPUT_PAUSE_RESUME } from \"../actions/input\";\nimport { moveDown, moveLeft, moveRight, rotateLeft, DIRECTION_DOWN, DIRECTION_LEFT, DIRECTION_RIGHT, rotateRight } from \"../actions/block\"\nimport { canMoveDown,canMoveLeft, canMoveRight, canRotateLeft, canRotateRight  } from \"../utils/moveValidations\";\nimport { togglePauseGame } from \"../actions/gameStatus\";\nimport { playSoundEffect } from \"../actions/sound\";\n\nimport {\n    COLLISION_BLOCK_SOUND_ALT, \n    MOVE_BLOCK_SOUND, \n    ROTATE_BLOCK_SOUND,\n    GAME_OVER_SOUND \n} from \"../../sound/soundNames\";\n\nconst getCanMoveDown = (state) => { return canMoveDown(state.game); };\n\n\nexport function* onInputMove(action) {\n    let gameState = yield select(); gameState = gameState.game; \n    let paused = gameState.stats.paused; if(paused) {return;}\n    let direction = action.payload;\n\n    switch (direction) {\n        case DIRECTION_DOWN:\n            if(canMoveDown(gameState))\n            {\n                yield put(moveDown());\n            }      \n            break;\n        case DIRECTION_LEFT:\n            if(canMoveLeft(gameState))\n            {\n                yield put(moveLeft());\n                yield put(playSoundEffect(MOVE_BLOCK_SOUND));  \n            }\n            break;\n        case DIRECTION_RIGHT: \n            if(canMoveRight(gameState))\n            {\n                yield put(moveRight());\n                yield put(playSoundEffect(MOVE_BLOCK_SOUND));    \n            }\n            break;        \n        default:\n            break;\n    }\n}\n\nexport function* onInputRotate(action) {\n    let gameState = yield select();\n    gameState = gameState.game; \n    let paused = gameState.stats.paused; if(paused) {return;}\n    let direction = action.payload;\n\n    //console.log(\"ROTATE\", action);\n    //console.log(\"PAUSED\", paused);\n\n    switch (direction) {\n        case DIRECTION_LEFT:\n            const canMoveRotateLeft = canRotateLeft(gameState);\n            if(canMoveRotateLeft)\n            {\n                //console.log(\"ROTATE LEFT\", canMoveRotateLeft);\n                yield put(rotateLeft());\n                yield put(playSoundEffect(ROTATE_BLOCK_SOUND));  \n            }\n            break;\n        case DIRECTION_RIGHT:\n            const canMoveRotateRight = canRotateRight(gameState);\n            if(canMoveRotateRight)\n            {\n                //console.log(\"ROTATE RIGHT\", canMoveRotateRight);\n                yield put(rotateRight());\n                yield put(playSoundEffect(ROTATE_BLOCK_SOUND));  \n\n            }\n            break;    \n        default:\n            break;\n    }\n}\n\nexport function* onInputPauseResume(action) {\n    yield put(togglePauseGame());\n    yield put(playSoundEffect(GAME_OVER_SOUND));  \n}\n\nexport function* gameControlsMain() {\n    yield takeLatest(INPUT_MOVE, onInputMove);\n    yield takeLatest(INPUT_ROTATE, onInputRotate);\n    yield takeLatest(INPUT_PAUSE_RESUME, onInputPauseResume);\n}\n","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/gameStatus.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/sound.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/gameGrid.js",["172","173","174","175","176"],"import { copy2dArray, newBlank2dArray } from \"./misc\";\n\nconst addBlockToGrid = function(block, gameGrid)\n{\n\n    let newGrid = copy2dArray(gameGrid);\n\n    let blockData = block.blockData;\n    let xOffset = block.xPos;\n    let yOffset = block.yPos;\n\n    if(blockData == null || blockData == undefined)\n    {\n        return newGrid;\n    }\n\n    for(let iY = 0; iY < blockData.length; iY++)\n    {\n        for(let iX = 0; iX < blockData[iY].length; iX++)\n        {\n            newGrid[yOffset + iY][xOffset + iX] = blockData[iY][iX] || newGrid[yOffset + iY][xOffset + iX]; \n        }\n    }\n\n    return newGrid;\n\n}\n\n\nconst rowIsAllFilled = function(row)\n{\n    for(let i = 0; i < row.length; i++)\n    {\n        if(row[i] == 0) {return false;}\n    }\n    return true;\n}\nconst clearRow = function(row)\n{\n    for(let i = 0; i < row.length; i++)\n    {\n        row[i] = 0;\n    }\n}\n\nconst clearFilledRows = function(gameGrid)\n{\n    let newGrid = copy2dArray(gameGrid);\n    let scoredPoints = 0;\n    for(let iY = 0; iY < newGrid.length; iY++)\n    {\n        if(rowIsAllFilled(newGrid[iY]))\n        {\n            clearRow(newGrid[iY]);\n            scoredPoints++;\n        }\n    }\n    return { newGrid, scoredPoints };\n}\n\n\nconst rowIsAllBlank= function(row)\n{\n    for(let i = 0; i < row.length; i++)\n    {\n        if(row[i] != 0) {return false;}\n    }\n    return true;\n}\nconst copyRowOver = function(source, target)\n{\n    for(let i = 0; i < source.length; i++)\n    {\n        target[i] = source[i];\n    }\n}\n\nconst shiftClearedRowsDown = function(gameGrid)\n{\n    let yDim = gameGrid.length; \n    let xDim = gameGrid[0].length;\n    let newGrid = newBlank2dArray(xDim, yDim);\n\n    let iYTarget = newGrid.length - 1;\n    for(let iYSource = gameGrid.length - 1; iYSource >= 0; iYSource-- )\n    {\n        if(!rowIsAllBlank(gameGrid[iYSource]))\n        {\n            copyRowOver(gameGrid[iYSource], newGrid[iYTarget]);\n            iYTarget--;\n        }\n    }\n\n    return newGrid;\n}\n\nconst getGameStateAsGrid = function(gameState)\n{\n\n    const playerGrid = gameState.grid;\n    const playerBlock = gameState.playerBlock;\n\n    if(playerBlock != null && playerBlock != undefined)\n    {\n        return addBlockToGrid(playerBlock, playerGrid);\n    }\n    else\n    {\n        return copy2dArray(playerGrid);\n    }\n}\n\nconst isGameOver = function(gameGrid)\n{\n\n}\n\n\nexport { addBlockToGrid, clearFilledRows, shiftClearedRowsDown, getGameStateAsGrid };","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/GameGridDisplay.js",["177"],"import React from \"react\";\n\nimport \"./GameGridBlock.css\";\nimport \"./GameGridDisplay.css\";\n\nimport { mapBlockNumberToColorClass } from \"./util\";\n\nclass GameGridDisplay extends React.Component {\n    \n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        if(!this.props.gameGrid){ return <div></div>;}\n        return(\n            <div className=\"GameGridDisplayContainer\" style={{maxWidth : this.props.maxWidth}}>\n                <div className=\"GameGridDisplay\">\n                    {this.props.gameGrid.map((row, indexRow) =>\n                        <div key={indexRow} className=\"GameGridDisplaygridRow\">\n                            {row.map((blockNumber, indexColumn) =>{\n                                let classNames = \"gridBlock \" + mapBlockNumberToColorClass(blockNumber);\n                                let divKey = `${indexRow}-${indexColumn}`;\n                                return(\n                                    <div key={divKey} className={classNames}></div>  \n                                )\n                            }\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default GameGridDisplay;","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/InputControls.js",["178"],"import React from \"react\";\nimport { inputLeft, inputRight, inputDown,  inputRotateLeft, inputRotateRight , inputPauseResume } from '../../store/actions/input';\nimport { connect } from 'react-redux';\n\nconst Mousetrap = require(\"mousetrap\");\nclass InputControls extends React.Component {\n    \n    constructor(props){\n        super(props);\n    }\n\n    render()\n    {\n        return (<div className=\"inputControls\"></div>)\n    }\n\n    componentDidMount() {\n\n        Mousetrap.bind(\"down\", () => this.props.inputDown());\n        Mousetrap.bind(\"left\", () => this.props.inputLeft());\n        Mousetrap.bind(\"right\", () => this.props.inputRight());\n\n        Mousetrap.bind(\"up\", () => this.props.inputRotateRight());\n        Mousetrap.bind(\"space\", () => this.props.inputRotateLeft());\n\n        Mousetrap.bind(\"esc\", () => this.props.inputPauseResume());\n        Mousetrap.bind(\"enter\", () => this.props.inputPauseResume());\n    }\n    \n    componentWillUnmount() {\n        Mousetrap.unbind(\"down\");\n        Mousetrap.unbind(\"left\");\n        Mousetrap.unbind(\"right\");\n        Mousetrap.unbind(\"up\");\n        Mousetrap.unbind(\"space\");\n        Mousetrap.unbind(\"esc\");\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      \n    }\n};\n  \nconst mapDispatchToProps = { \n    inputLeft, \n    inputRight, \n    inputDown,\n    inputRotateLeft,\n    inputRotateRight,\n    inputPauseResume\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(InputControls);\n","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/PauseButton.js",["179"],"import React from \"react\";\nimport \"./PauseButton.css\";\nclass PauseButton extends React.Component {\n    \n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        const className = this.props.isVisible ? \"PauseButton\" : \"PauseButton PauseButtonHidden\";\n        return(\n            <button className={className} onClick={() => {this.props.onClick();}}>\n                <i className=\"fas fa-pause-circle\"></i>\n            </button>\n        );\n    }\n}\n\nexport default PauseButton;","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/popup/PopupPaused.js",["180","181"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport Modal from 'react-modal';\n\n\n\n\nimport \"./Popup.css\";\n\nclass PopupPaused extends React.Component {\n\n  constructor(props)\n  {\n      super(props);\n  }\n\n  render()\n  {\n    return (\n        <Modal\n        isOpen={this.props.modalOpen}\n        ariaHideApp={false}\n        //onAfterOpen={afterOpenModal}\n        //onRequestClose={closeModal}\n        contentLabel=\"Example Modal\"\n        className=\"Popup PopupPaused\"\n        overlayClassName=\"PopupOverlay PopupOverlayPaused\"\n        >\n\n        <h1><i className=\"fa fa-pause\"></i></h1>     \n        <div>\n            <button onClick={() => {this.props.onResumeClick();}}>\n              <i className=\"fa fa-play\"></i>\n            </button>\n            <button onClick={() => {this.props.onRestartClick();}}>\n              <i className=\"fa fa-undo-alt\"></i>\n            </button>\n            <button>\n              <i className=\"fa fa-cog\"></i>\n            </button>\n            <button onClick={() => {this.props.onMainMenuClick();}}>\n              <i className=\"fa fa-sign-out-alt fa-flip-horizontal\"></i>\n            </button>\n        </div>\n\n        </Modal>\n      );\n  }\n\n}\n\nexport default PopupPaused;","/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/popup/PopupGameOver.js",["182","183"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport Modal from 'react-modal';\n\n\n\n\nimport \"./Popup.css\";\n\nclass PopupGameOver extends React.Component {\n\n  constructor(props)\n  {\n      super(props);\n  }\n\n  render()\n  {\n    return (\n        <Modal\n        isOpen={this.props.modalOpen}\n        ariaHideApp={false}\n        //onAfterOpen={afterOpenModal}\n        //onRequestClose={closeModal}\n        contentLabel=\"Example Modal\"\n        className=\"Popup PopupGameOver\"\n        overlayClassName=\"PopupOverlay PopupOverlayGameOver\"\n        >\n\n        <h1><i className=\"fa fa-star\"></i> {this.props.gameScore}</h1>     \n        <div>\n            <button onClick={ () => {this.props.onRestartClick();} }>\n              <i className=\"fa fa-undo-alt\"></i>\n            </button>\n            <button>\n              <i className=\"fa fa-cog\"></i>\n            </button>\n            <button onClick={() => {this.props.onMainMenuClick();}}>\n              <i className=\"fa fa-sign-out-alt fa-flip-horizontal\"></i>\n            </button>\n        </div>\n\n        </Modal>\n      );\n  }\n\n}\n\nexport default PopupGameOver;","/home/joseph/Documents/projects/stack-em-blocks/src/store/sagas/index.js",["184","185","186","187","188"],"import { connect } from 'react-redux';\nimport { call, select, put, takeEvery, takeLatest } from 'redux-saga/effects'\n\n\nimport { START_GAME, RESTART_GAME, PAUSE_RESUME_GAME, gameOver, incrementGameScore } from \"../actions/gameStatus\";\nimport { clearFilledRows, shiftClearedRows, addPlayerBlockToGrid } from \"../actions/gameGrid\";\nimport { moveDown, replacePlayerBlock } from \"../actions/block\"\nimport { getRandomBlock } from \"../utils/blockConstants\";\nimport { canMoveDown, isGameOver } from \"../utils/moveValidations\";\nimport * as GameGridUtil from \"../utils/gameGrid\";\n\nimport { \n    COLLISION_BLOCK_SOUND,\n    COLLISION_BLOCK_SOUND_ALT,\n    CLEAR_BLOCK_SOUND, \n    SHIFT_BLOCK_SOUND, \n    GAME_OVER_SOUND\n} from \"../../sound/soundNames\";\nimport { playSoundEffect } from \"../actions/sound\";\n\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\nconst getGamePaused = (state) => { return state.game.stats.paused };\nconst getGameOver = (state) => { return isGameOver(state.game); };\nconst getCanMoveDown = (state) => { return canMoveDown(state.game); };\nconst getRowsToClear = (state) => { return { ...GameGridUtil.clearFilledRows(state.game.grid) }.scoredPoints ; };\n\nexport function* mainGameLoop(action) {\n    \n    yield put(replacePlayerBlock(getRandomBlock()));\n    while(true)\n    {\n        if(yield select(getGameOver))\n        {\n            yield put(gameOver());\n            yield put(playSoundEffect(GAME_OVER_SOUND));\n            break;\n        }\n\n        if(yield select(getGamePaused))\n        {\n            yield delay(500);\n            continue;\n        }\n\n        if(yield select(getCanMoveDown))\n        {\n            yield delay(500);\n        }\n        \n        if(yield select(getCanMoveDown))\n        {\n            yield put(moveDown());\n        }\n        else\n        {\n            yield put(playSoundEffect(COLLISION_BLOCK_SOUND_ALT));\n            yield put(addPlayerBlockToGrid());\n            yield put(replacePlayerBlock(null));\n\n            let rowsToClear = yield select(getRowsToClear);\n            if(rowsToClear > 0)\n            {\n                yield put(clearFilledRows());\n                yield put(playSoundEffect(CLEAR_BLOCK_SOUND));\n                yield delay(250);\n                yield put(shiftClearedRows());\n                yield put(playSoundEffect(SHIFT_BLOCK_SOUND));\n                yield put(incrementGameScore( rowsToClear ));\n            }\n            yield put(replacePlayerBlock(getRandomBlock()));\n        }\n\n        \n\n    }\n    \n}\n\nexport function* startGame() {\n    yield takeLatest(START_GAME, mainGameLoop);\n    yield takeLatest(RESTART_GAME, mainGameLoop);\n}\n","/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/misc.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/sound/soundManager.js",["189","190","191"],"\n//import BufferLoader from \"./BufferLoader\";\nimport SoundLoader from \"./SoundLoader\";\n\nimport { soundMapping } from \"./soundNames\";\n\nconst DEFAULT_BACKGROUND_SOUND = \"\";\n\nclass SoundManager \n{\n    constructor()\n    {\n        console.log(\"SoundManager : constructor\");\n        this.audioContext = null;\n\n        this.soundMap = null; \n\n        this.sound = null;\n        try {\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\n            this.audioContext = new AudioContext();\n        }\n        catch(e) {\n            alert('Web Audio API is not supported in this browser');\n        }\n\n        this.loadSounds();\n    }\n\n    loadSounds(newSoundsMap = null)\n    {\n        if(newSoundsMap == null)\n        {\n            newSoundsMap = soundMapping;\n        }\n\n        function finishedLoading(newSoundMap) {\n            this.soundMap = newSoundMap;\n        }  \n\n        const soundLoader = new SoundLoader(\n            this.audioContext, \n            newSoundsMap, \n            finishedLoading.bind(this)\n        ); \n        soundLoader.load(); \n\n        /*\n\n        const bufferLoader = new BufferLoader(\n            this.audioContext,\n            [\n              '/sounds/click.mp3'\n            ],\n            finishedLoading.bind(this)\n            );\n        \n          bufferLoader.load();\n\n        */\n\n    }\n\n    //MUSIC\n    playBackgroundMusic()\n    {\n        console.log(\"SoundManager : playBackgroundMusic\");\n    }\n\n    pauseBackgroundMusic()\n    {\n        console.log(\"SoundManager : pauseBackgroundMusic\");\n    }\n\n    stopBackgroundMusic()\n    {\n        console.log(\"SoundManager : stopBackgroundMusic\");\n    }\n\n    setBackgroundMusicTrack(trackName)\n    {\n        console.log(\"SoundManager : setBackgroundMusicTrack\", trackName);\n    }\n\n    setBackGroundMusicVolume(volumeLevel)\n    {\n        console.log(\"SoundManager : setBackgroundMusicVolume\", volumeLevel);\n    }\n\n    //SOUND EFFECTS   \n    playSoundEffect(soundEffectName)\n    {\n        if( this.soundMap == null || this.soundMap == undefined )\n        {\n            return; \n        }\n\n        const source = this.audioContext.createBufferSource();\n        const soundBuffer = this.soundMap[soundEffectName];\n        source.buffer = soundBuffer;\n        source.connect(this.audioContext.destination);\n        source.start(0);\n\n    }\n\n    stopSoundEffects()\n    {\n        console.log(\"SoundManager : stopSoundEffects\");\n    }\n\n    setSoundEffectVolume()\n    {\n        console.log(\"SoundManager : setSoundEffectVolume\");\n    }\n\n}\n\nlet soundManagerInstance = null; \nconst getSoundManager = function()\n{\n    if(soundManagerInstance == null || soundManagerInstance == undefined)\n    {\n        soundManagerInstance = new SoundManager();\n    }\n    return soundManagerInstance;\n}\n\nexport default getSoundManager; ","/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/block.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/input.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/moveValidations.js",["192","193","194","195"],"    import { rotateLeft, rotateRight } from \"./blockActions\";\n    import { copyPlayerBlock } from \"./misc\";\n \n    //boolean\n    const isMoveOutOfBounds = function(gameGrid, playerBlock, xDir, yDir)\n    {\n        const blockData = playerBlock.blockData;\n        const x = playerBlock.xPos;\n        const y = playerBlock.yPos;\n\n        if(gameGrid == null || gameGrid == undefined || blockData == null || blockData == undefined)\n        {\n            return true; \n        }\n        \n        const yBlockLimit = blockData.length - 1 + y;\n        const xBlockLimit = blockData[0].length - 1 + x;\n        \n        if(y + yDir < 0) { return true; }\n        if(x + xDir < 0) { return true; }\n\n        if(yBlockLimit + yDir > gameGrid.length - 1) { return true; }\n        if(xBlockLimit + xDir > gameGrid[0].length - 1) { return true; }\n        \n        return false;   \n    }\n\n\n    //boolean\n    const isBlockCollision = function(gameGrid, playerBlock, xDir, yDir)\n    {\n        const blockData = playerBlock.blockData;\n        const x = playerBlock.xPos;\n        const y = playerBlock.yPos;\n\n        if(gameGrid == null || gameGrid == undefined || blockData == null || blockData == undefined)\n        {\n            return true; \n        }\n\n        let checkDirX = xDir; \n        let checkDirY = yDir;\n\n        for(let yI = 0; yI < blockData.length; yI++)\n        {\n            for(let xI = 0; xI < blockData[yI].length; xI++)\n            {\n                if(blockData[yI][xI] <= 0) {continue};\n                let checkY = yI + y + checkDirY;\n                let checkX = xI + x + checkDirX; \n                \n                if(\n                    (checkY >= 0 && checkY < gameGrid.length)\n                &&  (checkX >= 0 && checkX < gameGrid[0].length)\n                )\n                {\n                    if(gameGrid[checkY][checkX] > 0)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    //boolean\n    const canMoveDown = function(state)\n    {\n        const grid = state.grid;\n        const playerBlock = state.playerBlock;\n        if(isMoveOutOfBounds(grid, playerBlock, 0,1)) { return false;  }\n        if(isBlockCollision(grid, playerBlock, 0,1) ) { return false; }\n        return true;\n    }\n\n    //boolean\n    const canMoveLeft = function(state)\n    {\n        const grid = state.grid;\n        const playerBlock = state.playerBlock;\n        if(isMoveOutOfBounds(grid, playerBlock, -1,0)) { return false;  }\n        if(isBlockCollision(grid, playerBlock, -1,0) ) { return false; }\n        return true;\n    }\n\n    //boolean\n    const canMoveRight = function(state)\n    {\n        const grid = state.grid;\n        let playerBlock = state.playerBlock;\n        if(isMoveOutOfBounds(grid, playerBlock, 1,0)) { return false;  }\n        if(isBlockCollision(grid, playerBlock, 1,0) ) { return false; }\n        return true;\n    }\n\n    //boolean\n    const canRotateLeft = function(state)\n    {\n        const grid = state.grid;\n        let checkRotateLeft = rotateLeft(state.playerBlock);\n        if(isMoveOutOfBounds(grid, checkRotateLeft , 0,0)) { return false;  }\n        if(isBlockCollision(grid, checkRotateLeft , 0,0) ) { return false; }\n        return true;\n    }\n\n    //boolean\n    const canRotateRight = function(state)\n    {\n        const grid = state.grid;\n        let checkRotateRight = rotateRight(state.playerBlock);\n        if(isMoveOutOfBounds(grid, checkRotateRight , 0,0)) { return false;  }\n        if(isBlockCollision(grid, checkRotateRight , 0,0) ) { return false; }\n        return true;\n    }\n\n    const isGameOver = function(state)\n    {\n        const grid = state.grid;\n        let playerBlock = copyPlayerBlock(state.playerBlock);\n        if(isMoveOutOfBounds(grid, playerBlock, 0,0)) { return true;  }\n        if(isBlockCollision(grid, playerBlock, 0,0) ) { return true; }\n        return false;\n    }\n\n    /**\n     * \n    grid: newBlank2dArray(10,20),\n    playerBlock: {\n        xPos: 0, \n        yPos: 0,\n        blockData: null\n    },\n     * \n     */\n\n\nexport { \n    canMoveDown,\n    canMoveLeft,\n    canMoveRight,\n    canRotateLeft, \n    canRotateRight,\n    isGameOver \n};\n\n","/home/joseph/Documents/projects/stack-em-blocks/src/sound/soundNames.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/actions/gameGrid.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameStatusHelper.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameGridHelper.js",["196"],"import {  addBlockToGrid, clearFilledRows, shiftClearedRowsDown } from \"../../utils/gameGrid\";\n\nexport default class GameGridHelper {\n\n    static addBlockToGrid(state) {\n        const block = state.playerBlock;\n        const grid = state.grid;\n        const newGrid = addBlockToGrid(block, grid);\n\n        const newState = {\n            ...state,\n            grid: newGrid\n        }\n\n        return newState;\n    }\n\n    static clearFilledRows(state) {\n        const grid = state.grid;\n        const { newGrid , scoredPoints } = clearFilledRows(grid);\n\n        const newState = {\n            ...state,\n            grid: newGrid\n        };\n\n        return newState;\n    }\n\n    static shiftClearedRowsDown(state) {\n        const grid = state.grid;\n        const newGrid = shiftClearedRowsDown(grid);\n\n        const newState = {\n            ...state,\n            grid: newGrid\n        }\n\n        return newState;\n    }\n\n}","/home/joseph/Documents/projects/stack-em-blocks/src/store/reducers/helpers/GameBlockHelper.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/screens/components/util.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/blockConstants.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/store/utils/blockActions.js",[],"/home/joseph/Documents/projects/stack-em-blocks/src/sound/SoundLoader.js",["197"],"import { soundMapping } from \"./soundNames\";\nconst SOUND_DIR = \"/sounds/\";\n\n\nexport default class SoundLoader {\n\n    constructor(audioContext, soundMapping, callback)\n    {\n        this.context = audioContext;\n        this.soundMapping = soundMapping;\n        this.onloadCallback = callback;\n        this.soundCount = Object.keys(soundMapping).length;\n        this.loadCount = 0; \n        this.soundMap  = {}; \n    }\n\n    load()\n    {\n        let index = 0; \n        for(const soundName in soundMapping)\n        {\n            const fileName = soundMapping[soundName];\n            this.loadBuffer(soundName, fileName, ++index);\n        }\n    }\n\n    loadBuffer(soundName, fileName, index)\n    {\n        var request = new XMLHttpRequest();\n        const url = SOUND_DIR + fileName;\n        request.open(\"GET\", url, true);\n        request.responseType = \"arraybuffer\";\n      \n        var loader = this;\n      \n        request.onload = function() {\n            // Asynchronously decode the audio file data in request.response\n            loader.context.decodeAudioData(\n                request.response,\n                function(buffer) {\n                if (!buffer) {\n                    console.error('error decoding file data: ' + url);\n                    return;\n                }\n                loader.soundMap[soundName] = buffer;\n\n                if (++loader.loadCount == loader.soundCount)\n                {\n                    loader.onloadCallback(loader.soundMap);\n                }\n            },\n            function(error) {\n                console.error('decodeAudioData error', error);\n            }\n            );\n        }\n\n        request.onerror = function() {\n            console.error('BufferLoader: XHR error');\n        }\n        \n        request.send();\n\n    }\n\n}\n\n/*\nfunction BufferLoader(context, urlList, callback) {\n    this.context = context;\n    this.urlList = urlList;\n    this.onload = callback;\n    this.bufferList = new Array();\n    this.loadCount = 0;\n  }\n  \nBufferLoader.prototype.loadBuffer = function(url, index) {\n    // Load buffer asynchronously\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n  \n    var loader = this;\n  \n    request.onload = function() {\n      // Asynchronously decode the audio file data in request.response\n      loader.context.decodeAudioData(\n        request.response,\n        function(buffer) {\n          if (!buffer) {\n            alert('error decoding file data: ' + url);\n            return;\n        }\n        loader.bufferList[index] = buffer;\n        if (++loader.loadCount == loader.urlList.length)\n        loader.onload(loader.bufferList);\n    },\n    function(error) {\n        console.error('decodeAudioData error', error);\n    }\n    );\n}\n\nrequest.onerror = function() {\n    alert('BufferLoader: XHR error');\n}\n\nrequest.send();\n}\n\nBufferLoader.prototype.load = function() {\nfor (var i = 0; i < this.urlList.length; ++i)\nthis.loadBuffer(this.urlList[i], i);\n}\n\nexport default BufferLoader;\n\n*/",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":7},{"ruleId":"202","severity":1,"message":"206","line":8,"column":51,"nodeType":"204","messageId":"205","endLine":8,"endColumn":59},{"ruleId":"207","severity":1,"message":"208","line":44,"column":32,"nodeType":"209","messageId":"210","endLine":44,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":13,"endColumn":6},{"ruleId":"202","severity":1,"message":"215","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":38},{"ruleId":"202","severity":1,"message":"216","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":17},{"ruleId":"202","severity":1,"message":"217","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"218","line":2,"column":16,"nodeType":"204","messageId":"205","endLine":2,"endColumn":22},{"ruleId":"202","severity":1,"message":"219","line":2,"column":24,"nodeType":"204","messageId":"205","endLine":2,"endColumn":27},{"ruleId":"202","severity":1,"message":"220","line":2,"column":29,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"221","line":2,"column":52,"nodeType":"204","messageId":"205","endLine":2,"endColumn":55},{"ruleId":"222","severity":1,"message":"223","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":2},{"ruleId":"222","severity":1,"message":"223","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":2},{"ruleId":"202","severity":1,"message":"216","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":17},{"ruleId":"202","severity":1,"message":"217","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"220","line":2,"column":29,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"226","line":11,"column":5,"nodeType":"204","messageId":"205","endLine":11,"endColumn":30},{"ruleId":"202","severity":1,"message":"227","line":17,"column":7,"nodeType":"204","messageId":"205","endLine":17,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":12,"column":39,"nodeType":"209","messageId":"210","endLine":12,"endColumn":41},{"ruleId":"207","severity":1,"message":"228","line":34,"column":19,"nodeType":"209","messageId":"210","endLine":34,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":66,"column":19,"nodeType":"209","messageId":"210","endLine":66,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":103,"column":43,"nodeType":"209","messageId":"210","endLine":103,"endColumn":45},{"ruleId":"202","severity":1,"message":"229","line":113,"column":7,"nodeType":"204","messageId":"205","endLine":113,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":13,"endColumn":6},{"ruleId":"211","severity":1,"message":"212","line":8,"column":5,"nodeType":"213","messageId":"214","endLine":10,"endColumn":6},{"ruleId":"211","severity":1,"message":"212","line":5,"column":5,"nodeType":"213","messageId":"214","endLine":8,"endColumn":6},{"ruleId":"202","severity":1,"message":"230","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":12,"column":3,"nodeType":"213","messageId":"214","endLine":15,"endColumn":4},{"ruleId":"202","severity":1,"message":"230","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":12,"column":3,"nodeType":"213","messageId":"214","endLine":15,"endColumn":4},{"ruleId":"202","severity":1,"message":"216","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":17},{"ruleId":"202","severity":1,"message":"217","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"220","line":2,"column":29,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"231","line":5,"column":36,"nodeType":"204","messageId":"205","endLine":5,"endColumn":53},{"ruleId":"202","severity":1,"message":"232","line":13,"column":5,"nodeType":"204","messageId":"205","endLine":13,"endColumn":26},{"ruleId":"202","severity":1,"message":"233","line":7,"column":7,"nodeType":"204","messageId":"205","endLine":7,"endColumn":31},{"ruleId":"207","severity":1,"message":"228","line":93,"column":52,"nodeType":"209","messageId":"210","endLine":93,"endColumn":54},{"ruleId":"207","severity":1,"message":"228","line":121,"column":61,"nodeType":"209","messageId":"210","endLine":121,"endColumn":63},{"ruleId":"207","severity":1,"message":"228","line":11,"column":41,"nodeType":"209","messageId":"210","endLine":11,"endColumn":43},{"ruleId":"207","severity":1,"message":"228","line":11,"column":88,"nodeType":"209","messageId":"210","endLine":11,"endColumn":90},{"ruleId":"207","severity":1,"message":"228","line":36,"column":41,"nodeType":"209","messageId":"210","endLine":36,"endColumn":43},{"ruleId":"207","severity":1,"message":"228","line":36,"column":88,"nodeType":"209","messageId":"210","endLine":36,"endColumn":90},{"ruleId":"202","severity":1,"message":"234","line":20,"column":27,"nodeType":"204","messageId":"205","endLine":20,"endColumn":39},{"ruleId":"207","severity":1,"message":"228","line":47,"column":40,"nodeType":"209","messageId":"210","endLine":47,"endColumn":42},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'gameOver' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'copy2dArray' is defined but never used.","'connect' is defined but never used.","'call' is defined but never used.","'select' is defined but never used.","'put' is defined but never used.","'takeEvery' is defined but never used.","'all' is defined but never used.","require-yield","This generator function does not have 'yield'.","FunctionDeclaration","missingYield","'COLLISION_BLOCK_SOUND_ALT' is defined but never used.","'getCanMoveDown' is assigned a value but never used.","Expected '===' and instead saw '=='.","'isGameOver' is assigned a value but never used.","'render' is defined but never used.","'PAUSE_RESUME_GAME' is defined but never used.","'COLLISION_BLOCK_SOUND' is defined but never used.","'DEFAULT_BACKGROUND_SOUND' is assigned a value but never used.","'scoredPoints' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]