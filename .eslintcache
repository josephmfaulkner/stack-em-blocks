[{"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\index.js":"1","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\App.js":"2","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\reportWebVitals.js":"3","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\index.js":"4","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\MainGame.js":"5","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\index.js":"6","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\block.js":"7","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\controls.js":"8","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\input.js":"9","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\InputControls.js":"10","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\GameGridDisplay.js":"11","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\util.js":"12","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\gameStatus.js":"13","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\gameGrid.js":"14","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\MainMenu.js":"15","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\popup\\PopupPaused.js":"16","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\popup\\PopupGameOver.js":"17","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\PauseButton.js":"18","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\game.js":"19","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\moveValidations.js":"20","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\misc.js":"21","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameBlockHelper.js":"22","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameStatusHelper.js":"23","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameGridHelper.js":"24","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\blockActions.js":"25","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\gameGrid.js":"26","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\blockConstants.js":"27","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\SoundManagerComponent.js":"28","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\sound.js":"29","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\sound.js":"30","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\soundManager.js":"31","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\BufferLoader.js":"32","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\soundNames.js":"33","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\SoundLoader.js":"34"},{"size":623,"mtime":1608507108812,"results":"35","hashOfConfig":"36"},{"size":882,"mtime":1611474315747,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1608423388035,"results":"38","hashOfConfig":"36"},{"size":837,"mtime":1610851435212,"results":"39","hashOfConfig":"36"},{"size":3630,"mtime":1610839270943,"results":"40","hashOfConfig":"36"},{"size":2707,"mtime":1610916556855,"results":"41","hashOfConfig":"36"},{"size":1163,"mtime":1610426731744,"results":"42","hashOfConfig":"36"},{"size":3147,"mtime":1610912778423,"results":"43","hashOfConfig":"36"},{"size":1097,"mtime":1610509224521,"results":"44","hashOfConfig":"36"},{"size":1516,"mtime":1608532503915,"results":"45","hashOfConfig":"36"},{"size":1292,"mtime":1608873486537,"results":"46","hashOfConfig":"36"},{"size":193,"mtime":1608697879155,"results":"47","hashOfConfig":"36"},{"size":1299,"mtime":1610085214483,"results":"48","hashOfConfig":"36"},{"size":663,"mtime":1610429559865,"results":"49","hashOfConfig":"36"},{"size":850,"mtime":1608871743518,"results":"50","hashOfConfig":"36"},{"size":1281,"mtime":1608874022372,"results":"51","hashOfConfig":"36"},{"size":1176,"mtime":1608874025316,"results":"52","hashOfConfig":"36"},{"size":523,"mtime":1608876677882,"results":"53","hashOfConfig":"36"},{"size":2209,"mtime":1610828819732,"results":"54","hashOfConfig":"36"},{"size":4350,"mtime":1610915679503,"results":"55","hashOfConfig":"36"},{"size":1125,"mtime":1610825113380,"results":"56","hashOfConfig":"36"},{"size":1917,"mtime":1610828755086,"results":"57","hashOfConfig":"36"},{"size":925,"mtime":1610085951162,"results":"58","hashOfConfig":"36"},{"size":958,"mtime":1610430715019,"results":"59","hashOfConfig":"36"},{"size":1516,"mtime":1610826489970,"results":"60","hashOfConfig":"36"},{"size":2529,"mtime":1610828409299,"results":"61","hashOfConfig":"36"},{"size":871,"mtime":1610120070776,"results":"62","hashOfConfig":"36"},{"size":538,"mtime":1610852614027,"results":"63","hashOfConfig":"36"},{"size":710,"mtime":1610854818429,"results":"64","hashOfConfig":"36"},{"size":2513,"mtime":1610849201777,"results":"65","hashOfConfig":"36"},{"size":2933,"mtime":1610869868073,"results":"66","hashOfConfig":"36"},{"size":1288,"mtime":1610853184020,"results":"67","hashOfConfig":"68"},{"size":890,"mtime":1610907961602,"results":"69","hashOfConfig":"36"},{"size":3150,"mtime":1610869694921,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1ucayyt",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"73"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"73"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wo77io",{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\index.js",[],["158","159"],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\App.js",["160"],"import './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport MainMenu from \"./screens/MainMenu\";\nimport MainGame from \"./screens/MainGame\";\n\nimport SoundManagerComponent from \"./sound/SoundManagerComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n            <Route path=\"/singlePlayerGame\">\n              <MainGame />\n            </Route>\n            <Route path=\"/\">\n              <MainMenu />\n            </Route>\n          </Switch>\n      </Router>\n      <SoundManagerComponent />\n      <div style={{position : 'fixed', bottom: 0, right: 0}}>\n        <p style={{backgroundColor: 'white', margin: 0}}>\n          {process.env.REACT_APP_ENVIRONMENT_NAME}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\reportWebVitals.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\index.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\MainGame.js",["161","162"],"import React from \"react\";\r\n\r\nimport {\r\n    withRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { startGame, restartGame, togglePauseGame, gameOver, exitGame } from '../store/actions/gameStatus';\r\nimport { getGameStateAsGrid } from \"../store/utils/gameGrid\";\r\n\r\nimport GameGridDisplay from \"./components/GameGridDisplay\";\r\nimport InputControls from \"./components/InputControls\";\r\nimport PauseButton from \"./components/PauseButton\";\r\n\r\nimport PopupPaused from \"./components/popup/PopupPaused\";\r\nimport PopupGameOver from \"./components/popup/PopupGameOver\";\r\n\r\n\r\nimport \"./MainGame.css\";\r\nclass MainGame extends React.Component {\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = { \r\n            maxWidth: 0\r\n        };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.props.startGame();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        if(this.props.gameGrid != undefined) {\r\n            const rowsNum = this.props.gameGrid.length; if(rowsNum <= 0) {return;}\r\n            const colsNum = this.props.gameGrid[0].length;\r\n            const blockWidth = window.innerHeight / rowsNum;\r\n            const maxWidth = blockWidth * colsNum;\r\n            this.setState({ maxWidth });\r\n        }\r\n    }\r\n\r\n   onResumeClick() {\r\n        this.props.togglePauseGame();\r\n   } \r\n\r\n   onRestartClick() {\r\n       this.props.restartGame();\r\n   } \r\n\r\n   onMainMenuClick() {\r\n        this.props.exitGame();\r\n        this.props.history.push(\"/\");\r\n   }\r\n\r\n   render()\r\n   {\r\n       let modalOpen = this.props.paused || this.props.gameOver;\r\n       let className = modalOpen ? \"mainGameContainer PopupBackgroundContent\" : \"mainGameContainer\";\r\n       return (   \r\n           <div>\r\n            <PauseButton isVisible={!modalOpen} onClick={this.onResumeClick.bind(this)}/>   \r\n            <div className={className} style={{maxWidth : this.state.maxWidth}}>\r\n                \r\n                <GameGridDisplay gameGrid={this.props.gameGrid} maxWidth={this.state.maxWidth}/>\r\n                <PopupPaused \r\n                        modalOpen={this.props.paused && ! this.props.gameOver} \r\n                        onResumeClick={this.onResumeClick.bind(this)} \r\n                        onRestartClick={this.onRestartClick.bind(this)} \r\n                        onMainMenuClick={this.onMainMenuClick.bind(this)}\r\n                    />\r\n                <PopupGameOver \r\n                        modalOpen={this.props.gameOver} \r\n                        onRestartClick={this.onRestartClick.bind(this)} \r\n                        gameScore={this.props.gameScore}\r\n                        onMainMenuClick={this.onMainMenuClick.bind(this)}\r\n                    />\r\n                <InputControls />\r\n            </div>\r\n           </div>    \r\n\r\n       );\r\n   }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      gameScore: state.game.stats.score,\r\n      gameLevel: state.game.stats.level,  \r\n      gameGrid: getGameStateAsGrid(state.game),\r\n      playerBlock: state.game.playerBlock,\r\n      paused : state.game.stats.paused,\r\n      gameOver : state.game.stats.gameOver\r\n    }\r\n};\r\n  \r\nconst mapDispatchToProps = { startGame, togglePauseGame, restartGame, exitGame };\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(withRouter(MainGame));","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\index.js",["163","164","165","166","167"],"import { connect } from 'react-redux';\r\nimport { call, select, put, takeEvery, takeLatest } from 'redux-saga/effects'\r\n\r\n\r\nimport { START_GAME, RESTART_GAME, PAUSE_RESUME_GAME, gameOver, incrementGameScore } from \"../actions/gameStatus\";\r\nimport { clearFilledRows, shiftClearedRows, addPlayerBlockToGrid } from \"../actions/gameGrid\";\r\nimport { moveDown, replacePlayerBlock } from \"../actions/block\"\r\nimport { getRandomBlock } from \"../utils/blockConstants\";\r\nimport { canMoveDown, isGameOver } from \"../utils/moveValidations\";\r\nimport * as GameGridUtil from \"../utils/gameGrid\";\r\n\r\nimport { \r\n    COLLISION_BLOCK_SOUND,\r\n    COLLISION_BLOCK_SOUND_ALT,\r\n    CLEAR_BLOCK_SOUND, \r\n    SHIFT_BLOCK_SOUND, \r\n    GAME_OVER_SOUND\r\n} from \"../../sound/soundNames\";\r\nimport { playSoundEffect } from \"../actions/sound\";\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\nconst getGamePaused = (state) => { return state.game.stats.paused };\r\nconst getGameOver = (state) => { return isGameOver(state.game); };\r\nconst getCanMoveDown = (state) => { return canMoveDown(state.game); };\r\nconst getRowsToClear = (state) => { return { ...GameGridUtil.clearFilledRows(state.game.grid) }.scoredPoints ; };\r\n\r\nexport function* mainGameLoop(action) {\r\n    \r\n    yield put(replacePlayerBlock(getRandomBlock()));\r\n    while(true)\r\n    {\r\n        if(yield select(getGameOver))\r\n        {\r\n            yield put(gameOver());\r\n            yield put(playSoundEffect(GAME_OVER_SOUND));\r\n            break;\r\n        }\r\n\r\n        if(yield select(getGamePaused))\r\n        {\r\n            yield delay(500);\r\n            continue;\r\n        }\r\n\r\n        if(yield select(getCanMoveDown))\r\n        {\r\n            yield delay(500);\r\n        }\r\n        \r\n        if(yield select(getCanMoveDown))\r\n        {\r\n            yield put(moveDown());\r\n        }\r\n        else\r\n        {\r\n            yield put(playSoundEffect(COLLISION_BLOCK_SOUND_ALT));\r\n            yield put(addPlayerBlockToGrid());\r\n            yield put(replacePlayerBlock(null));\r\n\r\n            let rowsToClear = yield select(getRowsToClear);\r\n            if(rowsToClear > 0)\r\n            {\r\n                yield put(clearFilledRows());\r\n                yield put(playSoundEffect(CLEAR_BLOCK_SOUND));\r\n                yield delay(250);\r\n                yield put(shiftClearedRows());\r\n                yield put(playSoundEffect(SHIFT_BLOCK_SOUND));\r\n                yield put(incrementGameScore( rowsToClear ));\r\n            }\r\n            yield put(replacePlayerBlock(getRandomBlock()));\r\n        }\r\n\r\n        \r\n\r\n    }\r\n    \r\n}\r\n\r\nexport function* startGame() {\r\n    yield takeLatest(START_GAME, mainGameLoop);\r\n    yield takeLatest(RESTART_GAME, mainGameLoop);\r\n}\r\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\block.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\controls.js",["168","169","170","171","172"],"import { connect } from 'react-redux';\r\nimport { call, select, put, takeEvery, takeLatest } from 'redux-saga/effects'\r\n\r\nimport { INPUT_MOVE, INPUT_ROTATE, INPUT_PAUSE_RESUME } from \"../actions/input\";\r\nimport { moveDown, moveLeft, moveRight, rotateLeft, DIRECTION_DOWN, DIRECTION_LEFT, DIRECTION_RIGHT, rotateRight } from \"../actions/block\"\r\nimport { canMoveDown,canMoveLeft, canMoveRight, canRotateLeft, canRotateRight  } from \"../utils/moveValidations\";\r\nimport { togglePauseGame } from \"../actions/gameStatus\";\r\nimport { playSoundEffect } from \"../actions/sound\";\r\n\r\nimport {\r\n    COLLISION_BLOCK_SOUND_ALT, \r\n    MOVE_BLOCK_SOUND, \r\n    ROTATE_BLOCK_SOUND,\r\n    GAME_OVER_SOUND \r\n} from \"../../sound/soundNames\";\r\n\r\nconst getCanMoveDown = (state) => { return canMoveDown(state.game); };\r\n\r\n\r\nexport function* onInputMove(action) {\r\n    let gameState = yield select(); gameState = gameState.game; \r\n    let paused = gameState.stats.paused; if(paused) {return;}\r\n    let direction = action.payload;\r\n\r\n    switch (direction) {\r\n        case DIRECTION_DOWN:\r\n            if(canMoveDown(gameState))\r\n            {\r\n                yield put(moveDown());\r\n            }      \r\n            break;\r\n        case DIRECTION_LEFT:\r\n            if(canMoveLeft(gameState))\r\n            {\r\n                yield put(moveLeft());\r\n                yield put(playSoundEffect(MOVE_BLOCK_SOUND));  \r\n            }\r\n            break;\r\n        case DIRECTION_RIGHT: \r\n            if(canMoveRight(gameState))\r\n            {\r\n                yield put(moveRight());\r\n                yield put(playSoundEffect(MOVE_BLOCK_SOUND));    \r\n            }\r\n            break;        \r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function* onInputRotate(action) {\r\n    let gameState = yield select();\r\n    gameState = gameState.game; \r\n    let paused = gameState.stats.paused; if(paused) {return;}\r\n    let direction = action.payload;\r\n\r\n    //console.log(\"ROTATE\", action);\r\n    //console.log(\"PAUSED\", paused);\r\n\r\n    switch (direction) {\r\n        case DIRECTION_LEFT:\r\n            const canMoveRotateLeft = canRotateLeft(gameState);\r\n            if(canMoveRotateLeft)\r\n            {\r\n                //console.log(\"ROTATE LEFT\", canMoveRotateLeft);\r\n                yield put(rotateLeft());\r\n                yield put(playSoundEffect(ROTATE_BLOCK_SOUND));  \r\n            }\r\n            break;\r\n        case DIRECTION_RIGHT:\r\n            const canMoveRotateRight = canRotateRight(gameState);\r\n            if(canMoveRotateRight)\r\n            {\r\n                //console.log(\"ROTATE RIGHT\", canMoveRotateRight);\r\n                yield put(rotateRight());\r\n                yield put(playSoundEffect(ROTATE_BLOCK_SOUND));  \r\n\r\n            }\r\n            break;    \r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function* onInputPauseResume(action) {\r\n    yield put(togglePauseGame());\r\n    yield put(playSoundEffect(GAME_OVER_SOUND));  \r\n}\r\n\r\nexport function* gameControlsMain() {\r\n    yield takeLatest(INPUT_MOVE, onInputMove);\r\n    yield takeLatest(INPUT_ROTATE, onInputRotate);\r\n    yield takeLatest(INPUT_PAUSE_RESUME, onInputPauseResume);\r\n}\r\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\input.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\InputControls.js",["173"],"import React from \"react\";\r\nimport { inputLeft, inputRight, inputDown,  inputRotateLeft, inputRotateRight , inputPauseResume } from '../../store/actions/input';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Mousetrap = require(\"mousetrap\");\r\nclass InputControls extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<div className=\"inputControls\"></div>)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        Mousetrap.bind(\"down\", () => this.props.inputDown());\r\n        Mousetrap.bind(\"left\", () => this.props.inputLeft());\r\n        Mousetrap.bind(\"right\", () => this.props.inputRight());\r\n\r\n        Mousetrap.bind(\"up\", () => this.props.inputRotateRight());\r\n        Mousetrap.bind(\"space\", () => this.props.inputRotateLeft());\r\n\r\n        Mousetrap.bind(\"esc\", () => this.props.inputPauseResume());\r\n        Mousetrap.bind(\"enter\", () => this.props.inputPauseResume());\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        Mousetrap.unbind(\"down\");\r\n        Mousetrap.unbind(\"left\");\r\n        Mousetrap.unbind(\"right\");\r\n        Mousetrap.unbind(\"up\");\r\n        Mousetrap.unbind(\"space\");\r\n        Mousetrap.unbind(\"esc\");\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      \r\n    }\r\n};\r\n  \r\nconst mapDispatchToProps = { \r\n    inputLeft, \r\n    inputRight, \r\n    inputDown,\r\n    inputRotateLeft,\r\n    inputRotateRight,\r\n    inputPauseResume\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(InputControls);\r\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\GameGridDisplay.js",["174"],"import React from \"react\";\r\n\r\nimport \"./GameGridBlock.css\";\r\nimport \"./GameGridDisplay.css\";\r\n\r\nimport { mapBlockNumberToColorClass } from \"./util\";\r\n\r\nclass GameGridDisplay extends React.Component {\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!this.props.gameGrid){ return <div></div>;}\r\n        return(\r\n            <div className=\"GameGridDisplayContainer\" style={{maxWidth : this.props.maxWidth}}>\r\n                <div className=\"GameGridDisplay\">\r\n                    {this.props.gameGrid.map((row, indexRow) =>\r\n                        <div key={indexRow} className=\"GameGridDisplaygridRow\">\r\n                            {row.map((blockNumber, indexColumn) =>{\r\n                                let classNames = \"gridBlock \" + mapBlockNumberToColorClass(blockNumber);\r\n                                let divKey = `${indexRow}-${indexColumn}`;\r\n                                return(\r\n                                    <div key={divKey} className={classNames}></div>  \r\n                                )\r\n                            }\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default GameGridDisplay;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\util.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\gameStatus.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\gameGrid.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\MainMenu.js",["175"],"import React from \"react\";\r\nimport \"./MainMenu.css\";\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass MainMenu extends React.Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return( \r\n        <div className=\"MainMenu\">\r\n            <div className=\"Content\">\r\n                <div className=\"header\">\r\n                    <h1>\r\n                        <i className=\"fas fa-cubes\"></i>\r\n                    </h1>\r\n                    <h1>Stack Em Blocks!</h1>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <Link to=\"/singlePlayerGame\">\r\n                        <i className=\"fas fa-play-circle\"></i>\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MainMenu;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\popup\\PopupPaused.js",["176","177"],"import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\n\r\nimport \"./Popup.css\";\r\n\r\nclass PopupPaused extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n        <Modal\r\n        isOpen={this.props.modalOpen}\r\n        ariaHideApp={false}\r\n        //onAfterOpen={afterOpenModal}\r\n        //onRequestClose={closeModal}\r\n        contentLabel=\"Example Modal\"\r\n        className=\"Popup PopupPaused\"\r\n        overlayClassName=\"PopupOverlay PopupOverlayPaused\"\r\n        >\r\n\r\n        <h1><i className=\"fa fa-pause\"></i></h1>     \r\n        <div>\r\n            <button onClick={() => {this.props.onResumeClick();}}>\r\n              <i className=\"fa fa-play\"></i>\r\n            </button>\r\n            <button onClick={() => {this.props.onRestartClick();}}>\r\n              <i className=\"fa fa-undo-alt\"></i>\r\n            </button>\r\n            <button>\r\n              <i className=\"fa fa-cog\"></i>\r\n            </button>\r\n            <button onClick={() => {this.props.onMainMenuClick();}}>\r\n              <i className=\"fa fa-sign-out-alt fa-flip-horizontal\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        </Modal>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default PopupPaused;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\popup\\PopupGameOver.js",["178","179"],"import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\n\r\nimport \"./Popup.css\";\r\n\r\nclass PopupGameOver extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n        <Modal\r\n        isOpen={this.props.modalOpen}\r\n        ariaHideApp={false}\r\n        //onAfterOpen={afterOpenModal}\r\n        //onRequestClose={closeModal}\r\n        contentLabel=\"Example Modal\"\r\n        className=\"Popup PopupGameOver\"\r\n        overlayClassName=\"PopupOverlay PopupOverlayGameOver\"\r\n        >\r\n\r\n        <h1><i className=\"fa fa-star\"></i> {this.props.gameScore}</h1>     \r\n        <div>\r\n            <button onClick={ () => {this.props.onRestartClick();} }>\r\n              <i className=\"fa fa-undo-alt\"></i>\r\n            </button>\r\n            <button>\r\n              <i className=\"fa fa-cog\"></i>\r\n            </button>\r\n            <button onClick={() => {this.props.onMainMenuClick();}}>\r\n              <i className=\"fa fa-sign-out-alt fa-flip-horizontal\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        </Modal>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default PopupGameOver;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\screens\\components\\PauseButton.js",["180"],"import React from \"react\";\r\nimport \"./PauseButton.css\";\r\nclass PauseButton extends React.Component {\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const className = this.props.isVisible ? \"PauseButton\" : \"PauseButton PauseButtonHidden\";\r\n        return(\r\n            <button className={className} onClick={() => {this.props.onClick();}}>\r\n                <i className=\"fas fa-pause-circle\"></i>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PauseButton;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\game.js",["181"],"import { newBlank2dArray, copy2dArray } from \"../utils/misc\";\r\n\r\nimport { MOVE_BLOCK, ROTATE_BLOCK, REPLACE_PLAYER_BLOCK } from \"../actions/block\";\r\nimport { CLEAR_FILLED_ROWS, SHIFT_CLEARED_ROWS, ADD_PLAYER_BLOCK_TO_GRID } from \"../actions/gameGrid\";\r\nimport { INCREMENT_GAME_SCORE, RESTART_GAME, PAUSE_RESUME_GAME, GAME_OVER, EXIT_GAME } from \"../actions/gameStatus\";\r\n\r\n\r\nimport GameBlockHelper from \"./helpers/GameBlockHelper\";\r\nimport GameGridHelper from \"./helpers/GameGridHelper\";\r\nimport GameStatusHelper from \"./helpers/GameStatusHelper\";\r\n\r\n\r\nconst defaultState = {\r\n    grid: newBlank2dArray(10,20),\r\n    playerBlock: {\r\n        xPos: 0, \r\n        yPos: 0,\r\n        blockData: null\r\n    },\r\n    stats: {\r\n        paused: false,\r\n        gameOver: false,\r\n        level: 1,\r\n        score: 0\r\n    } \r\n}\r\n\r\nconst game = function(state = defaultState, action)\r\n{  \r\n\r\n    switch(action.type)\r\n    {\r\n        case REPLACE_PLAYER_BLOCK:\r\n            const newPlayerBlock = action.payload;\r\n            return GameBlockHelper.replacePlayerBlock(state, newPlayerBlock);\r\n        case MOVE_BLOCK:\r\n            const moveDirection = action.payload;\r\n            return GameBlockHelper.moveBlock(state, moveDirection);\r\n        case ROTATE_BLOCK:\r\n            const rotateDirection = action.payload;\r\n            return GameBlockHelper.rotateBlock(state, rotateDirection);\r\n        case ADD_PLAYER_BLOCK_TO_GRID: \r\n            return GameGridHelper.addBlockToGrid(state);      \r\n        case CLEAR_FILLED_ROWS:\r\n            return GameGridHelper.clearFilledRows(state);\r\n        case SHIFT_CLEARED_ROWS:\r\n            return GameGridHelper.shiftClearedRowsDown(state);\r\n        case INCREMENT_GAME_SCORE:\r\n            const incrementAmount = action.payload; \r\n            return GameStatusHelper.incrementGameScore(state, incrementAmount);\r\n        case PAUSE_RESUME_GAME:\r\n            return GameStatusHelper.togglePaused(state);\r\n        case GAME_OVER:\r\n            return GameStatusHelper.gameOver(state);\r\n        case RESTART_GAME:\r\n            return defaultState;\r\n        case EXIT_GAME:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default game;","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\moveValidations.js",["182","183","184","185"],"    import { rotateLeft, rotateRight } from \"./blockActions\";\r\n    import { copyPlayerBlock } from \"./misc\";\r\n \r\n    //boolean\r\n    const isMoveOutOfBounds = function(gameGrid, playerBlock, xDir, yDir)\r\n    {\r\n        const blockData = playerBlock.blockData;\r\n        const x = playerBlock.xPos;\r\n        const y = playerBlock.yPos;\r\n\r\n        if(gameGrid == null || gameGrid == undefined || blockData == null || blockData == undefined)\r\n        {\r\n            return true; \r\n        }\r\n        \r\n        const yBlockLimit = blockData.length - 1 + y;\r\n        const xBlockLimit = blockData[0].length - 1 + x;\r\n        \r\n        if(y + yDir < 0) { return true; }\r\n        if(x + xDir < 0) { return true; }\r\n\r\n        if(yBlockLimit + yDir > gameGrid.length - 1) { return true; }\r\n        if(xBlockLimit + xDir > gameGrid[0].length - 1) { return true; }\r\n        \r\n        return false;   \r\n    }\r\n\r\n\r\n    //boolean\r\n    const isBlockCollision = function(gameGrid, playerBlock, xDir, yDir)\r\n    {\r\n        const blockData = playerBlock.blockData;\r\n        const x = playerBlock.xPos;\r\n        const y = playerBlock.yPos;\r\n\r\n        if(gameGrid == null || gameGrid == undefined || blockData == null || blockData == undefined)\r\n        {\r\n            return true; \r\n        }\r\n\r\n        let checkDirX = xDir; \r\n        let checkDirY = yDir;\r\n\r\n        for(let yI = 0; yI < blockData.length; yI++)\r\n        {\r\n            for(let xI = 0; xI < blockData[yI].length; xI++)\r\n            {\r\n                if(blockData[yI][xI] <= 0) {continue};\r\n                let checkY = yI + y + checkDirY;\r\n                let checkX = xI + x + checkDirX; \r\n                \r\n                if(\r\n                    (checkY >= 0 && checkY < gameGrid.length)\r\n                &&  (checkX >= 0 && checkX < gameGrid[0].length)\r\n                )\r\n                {\r\n                    if(gameGrid[checkY][checkX] > 0)\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //boolean\r\n    const canMoveDown = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        const playerBlock = state.playerBlock;\r\n        if(isMoveOutOfBounds(grid, playerBlock, 0,1)) { return false;  }\r\n        if(isBlockCollision(grid, playerBlock, 0,1) ) { return false; }\r\n        return true;\r\n    }\r\n\r\n    //boolean\r\n    const canMoveLeft = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        const playerBlock = state.playerBlock;\r\n        if(isMoveOutOfBounds(grid, playerBlock, -1,0)) { return false;  }\r\n        if(isBlockCollision(grid, playerBlock, -1,0) ) { return false; }\r\n        return true;\r\n    }\r\n\r\n    //boolean\r\n    const canMoveRight = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        let playerBlock = state.playerBlock;\r\n        if(isMoveOutOfBounds(grid, playerBlock, 1,0)) { return false;  }\r\n        if(isBlockCollision(grid, playerBlock, 1,0) ) { return false; }\r\n        return true;\r\n    }\r\n\r\n    //boolean\r\n    const canRotateLeft = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        let checkRotateLeft = rotateLeft(state.playerBlock);\r\n        if(isMoveOutOfBounds(grid, checkRotateLeft , 0,0)) { return false;  }\r\n        if(isBlockCollision(grid, checkRotateLeft , 0,0) ) { return false; }\r\n        return true;\r\n    }\r\n\r\n    //boolean\r\n    const canRotateRight = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        let checkRotateRight = rotateRight(state.playerBlock);\r\n        if(isMoveOutOfBounds(grid, checkRotateRight , 0,0)) { return false;  }\r\n        if(isBlockCollision(grid, checkRotateRight , 0,0) ) { return false; }\r\n        return true;\r\n    }\r\n\r\n    const isGameOver = function(state)\r\n    {\r\n        const grid = state.grid;\r\n        let playerBlock = copyPlayerBlock(state.playerBlock);\r\n        if(isMoveOutOfBounds(grid, playerBlock, 0,0)) { return true;  }\r\n        if(isBlockCollision(grid, playerBlock, 0,0) ) { return true; }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n    grid: newBlank2dArray(10,20),\r\n    playerBlock: {\r\n        xPos: 0, \r\n        yPos: 0,\r\n        blockData: null\r\n    },\r\n     * \r\n     */\r\n\r\n\r\nexport { \r\n    canMoveDown,\r\n    canMoveLeft,\r\n    canMoveRight,\r\n    canRotateLeft, \r\n    canRotateRight,\r\n    isGameOver \r\n};\r\n\r\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\misc.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameBlockHelper.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameStatusHelper.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\reducers\\helpers\\GameGridHelper.js",["186"],"import {  addBlockToGrid, clearFilledRows, shiftClearedRowsDown } from \"../../utils/gameGrid\";\r\n\r\nexport default class GameGridHelper {\r\n\r\n    static addBlockToGrid(state) {\r\n        const block = state.playerBlock;\r\n        const grid = state.grid;\r\n        const newGrid = addBlockToGrid(block, grid);\r\n\r\n        const newState = {\r\n            ...state,\r\n            grid: newGrid\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n    static clearFilledRows(state) {\r\n        const grid = state.grid;\r\n        const { newGrid , scoredPoints } = clearFilledRows(grid);\r\n\r\n        const newState = {\r\n            ...state,\r\n            grid: newGrid\r\n        };\r\n\r\n        return newState;\r\n    }\r\n\r\n    static shiftClearedRowsDown(state) {\r\n        const grid = state.grid;\r\n        const newGrid = shiftClearedRowsDown(grid);\r\n\r\n        const newState = {\r\n            ...state,\r\n            grid: newGrid\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n}","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\blockActions.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\gameGrid.js",["187","188","189","190","191"],"import { copy2dArray, newBlank2dArray } from \"./misc\";\r\n\r\nconst addBlockToGrid = function(block, gameGrid)\r\n{\r\n\r\n    let newGrid = copy2dArray(gameGrid);\r\n\r\n    let blockData = block.blockData;\r\n    let xOffset = block.xPos;\r\n    let yOffset = block.yPos;\r\n\r\n    if(blockData == null || blockData == undefined)\r\n    {\r\n        return newGrid;\r\n    }\r\n\r\n    for(let iY = 0; iY < blockData.length; iY++)\r\n    {\r\n        for(let iX = 0; iX < blockData[iY].length; iX++)\r\n        {\r\n            newGrid[yOffset + iY][xOffset + iX] = blockData[iY][iX] || newGrid[yOffset + iY][xOffset + iX]; \r\n        }\r\n    }\r\n\r\n    return newGrid;\r\n\r\n}\r\n\r\n\r\nconst rowIsAllFilled = function(row)\r\n{\r\n    for(let i = 0; i < row.length; i++)\r\n    {\r\n        if(row[i] == 0) {return false;}\r\n    }\r\n    return true;\r\n}\r\nconst clearRow = function(row)\r\n{\r\n    for(let i = 0; i < row.length; i++)\r\n    {\r\n        row[i] = 0;\r\n    }\r\n}\r\n\r\nconst clearFilledRows = function(gameGrid)\r\n{\r\n    let newGrid = copy2dArray(gameGrid);\r\n    let scoredPoints = 0;\r\n    for(let iY = 0; iY < newGrid.length; iY++)\r\n    {\r\n        if(rowIsAllFilled(newGrid[iY]))\r\n        {\r\n            clearRow(newGrid[iY]);\r\n            scoredPoints++;\r\n        }\r\n    }\r\n    return { newGrid, scoredPoints };\r\n}\r\n\r\n\r\nconst rowIsAllBlank= function(row)\r\n{\r\n    for(let i = 0; i < row.length; i++)\r\n    {\r\n        if(row[i] != 0) {return false;}\r\n    }\r\n    return true;\r\n}\r\nconst copyRowOver = function(source, target)\r\n{\r\n    for(let i = 0; i < source.length; i++)\r\n    {\r\n        target[i] = source[i];\r\n    }\r\n}\r\n\r\nconst shiftClearedRowsDown = function(gameGrid)\r\n{\r\n    let yDim = gameGrid.length; \r\n    let xDim = gameGrid[0].length;\r\n    let newGrid = newBlank2dArray(xDim, yDim);\r\n\r\n    let iYTarget = newGrid.length - 1;\r\n    for(let iYSource = gameGrid.length - 1; iYSource >= 0; iYSource-- )\r\n    {\r\n        if(!rowIsAllBlank(gameGrid[iYSource]))\r\n        {\r\n            copyRowOver(gameGrid[iYSource], newGrid[iYTarget]);\r\n            iYTarget--;\r\n        }\r\n    }\r\n\r\n    return newGrid;\r\n}\r\n\r\nconst getGameStateAsGrid = function(gameState)\r\n{\r\n\r\n    const playerGrid = gameState.grid;\r\n    const playerBlock = gameState.playerBlock;\r\n\r\n    if(playerBlock != null && playerBlock != undefined)\r\n    {\r\n        return addBlockToGrid(playerBlock, playerGrid);\r\n    }\r\n    else\r\n    {\r\n        return copy2dArray(playerGrid);\r\n    }\r\n}\r\n\r\nconst isGameOver = function(gameGrid)\r\n{\r\n\r\n}\r\n\r\n\r\nexport { addBlockToGrid, clearFilledRows, shiftClearedRowsDown, getGameStateAsGrid };","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\utils\\blockConstants.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\SoundManagerComponent.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\sagas\\sound.js",["192","193","194","195","196","197","198","199"],"import { connect } from 'react-redux';\r\nimport { call, select, put, takeEvery, takeLatest, all } from 'redux-saga/effects'\r\nimport getSoundManager from \"../../sound/soundManager\";\r\nimport { LOAD_SOUNDS, PLAY_SOUND_EFFECT } from \"../actions/sound\";\r\n\r\nexport function* loadSoundsHandler(action) {\r\n    const actionPayload = action.payload; \r\n    getSoundManager().loadSounds(actionPayload);\r\n}\r\n\r\nexport function* playSoundEffectHandler(action) {\r\n    const actionPayload = action.payload;\r\n    getSoundManager().playSoundEffect(actionPayload);\r\n}\r\n\r\nexport function* gameSoundMain() {\r\n    yield takeLatest(LOAD_SOUNDS, loadSoundsHandler);\r\n    yield takeLatest(PLAY_SOUND_EFFECT, playSoundEffectHandler);\r\n}\r\n","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\store\\actions\\sound.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\soundManager.js",["200","201","202"],"\r\n//import BufferLoader from \"./BufferLoader\";\r\nimport SoundLoader from \"./SoundLoader\";\r\n\r\nimport { soundMapping } from \"./soundNames\";\r\n\r\nconst DEFAULT_BACKGROUND_SOUND = \"\";\r\n\r\nclass SoundManager \r\n{\r\n    constructor()\r\n    {\r\n        console.log(\"SoundManager : constructor\");\r\n        this.audioContext = null;\r\n\r\n        this.soundMap = null; \r\n\r\n        this.sound = null;\r\n        try {\r\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n            this.audioContext = new AudioContext();\r\n        }\r\n        catch(e) {\r\n            alert('Web Audio API is not supported in this browser');\r\n        }\r\n\r\n        this.loadSounds();\r\n    }\r\n\r\n    loadSounds(newSoundsMap = null)\r\n    {\r\n        if(newSoundsMap == null)\r\n        {\r\n            newSoundsMap = soundMapping;\r\n        }\r\n\r\n        function finishedLoading(newSoundMap) {\r\n            this.soundMap = newSoundMap;\r\n        }  \r\n\r\n        const soundLoader = new SoundLoader(\r\n            this.audioContext, \r\n            newSoundsMap, \r\n            finishedLoading.bind(this)\r\n        ); \r\n        soundLoader.load(); \r\n\r\n        /*\r\n\r\n        const bufferLoader = new BufferLoader(\r\n            this.audioContext,\r\n            [\r\n              '/sounds/click.mp3'\r\n            ],\r\n            finishedLoading.bind(this)\r\n            );\r\n        \r\n          bufferLoader.load();\r\n\r\n        */\r\n\r\n    }\r\n\r\n    //MUSIC\r\n    playBackgroundMusic()\r\n    {\r\n        console.log(\"SoundManager : playBackgroundMusic\");\r\n    }\r\n\r\n    pauseBackgroundMusic()\r\n    {\r\n        console.log(\"SoundManager : pauseBackgroundMusic\");\r\n    }\r\n\r\n    stopBackgroundMusic()\r\n    {\r\n        console.log(\"SoundManager : stopBackgroundMusic\");\r\n    }\r\n\r\n    setBackgroundMusicTrack(trackName)\r\n    {\r\n        console.log(\"SoundManager : setBackgroundMusicTrack\", trackName);\r\n    }\r\n\r\n    setBackGroundMusicVolume(volumeLevel)\r\n    {\r\n        console.log(\"SoundManager : setBackgroundMusicVolume\", volumeLevel);\r\n    }\r\n\r\n    //SOUND EFFECTS   \r\n    playSoundEffect(soundEffectName)\r\n    {\r\n        if( this.soundMap == null || this.soundMap == undefined )\r\n        {\r\n            return; \r\n        }\r\n\r\n        const source = this.audioContext.createBufferSource();\r\n        const soundBuffer = this.soundMap[soundEffectName];\r\n        source.buffer = soundBuffer;\r\n        source.connect(this.audioContext.destination);\r\n        source.start(0);\r\n\r\n    }\r\n\r\n    stopSoundEffects()\r\n    {\r\n        console.log(\"SoundManager : stopSoundEffects\");\r\n    }\r\n\r\n    setSoundEffectVolume()\r\n    {\r\n        console.log(\"SoundManager : setSoundEffectVolume\");\r\n    }\r\n\r\n}\r\n\r\nlet soundManagerInstance = null; \r\nconst getSoundManager = function()\r\n{\r\n    if(soundManagerInstance == null || soundManagerInstance == undefined)\r\n    {\r\n        soundManagerInstance = new SoundManager();\r\n    }\r\n    return soundManagerInstance;\r\n}\r\n\r\nexport default getSoundManager; ","C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\BufferLoader.js",["203","204"],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\soundNames.js",[],"C:\\Users\\Joseph Faulkner\\Documents\\projects\\stack-em-blocks\\src\\sound\\SoundLoader.js",["205"],"import { soundMapping } from \"./soundNames\";\r\nconst SOUND_DIR = \"/sounds/\";\r\n\r\n\r\nexport default class SoundLoader {\r\n\r\n    constructor(audioContext, soundMapping, callback)\r\n    {\r\n        this.context = audioContext;\r\n        this.soundMapping = soundMapping;\r\n        this.onloadCallback = callback;\r\n        this.soundCount = Object.keys(soundMapping).length;\r\n        this.loadCount = 0; \r\n        this.soundMap  = {}; \r\n    }\r\n\r\n    load()\r\n    {\r\n        let index = 0; \r\n        for(const soundName in soundMapping)\r\n        {\r\n            const fileName = soundMapping[soundName];\r\n            this.loadBuffer(soundName, fileName, ++index);\r\n        }\r\n    }\r\n\r\n    loadBuffer(soundName, fileName, index)\r\n    {\r\n        var request = new XMLHttpRequest();\r\n        const url = SOUND_DIR + fileName;\r\n        request.open(\"GET\", url, true);\r\n        request.responseType = \"arraybuffer\";\r\n      \r\n        var loader = this;\r\n      \r\n        request.onload = function() {\r\n            // Asynchronously decode the audio file data in request.response\r\n            loader.context.decodeAudioData(\r\n                request.response,\r\n                function(buffer) {\r\n                if (!buffer) {\r\n                    console.error('error decoding file data: ' + url);\r\n                    return;\r\n                }\r\n                loader.soundMap[soundName] = buffer;\r\n\r\n                if (++loader.loadCount == loader.soundCount)\r\n                {\r\n                    loader.onloadCallback(loader.soundMap);\r\n                }\r\n            },\r\n            function(error) {\r\n                console.error('decodeAudioData error', error);\r\n            }\r\n            );\r\n        }\r\n\r\n        request.onerror = function() {\r\n            console.error('BufferLoader: XHR error');\r\n        }\r\n        \r\n        request.send();\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\nfunction BufferLoader(context, urlList, callback) {\r\n    this.context = context;\r\n    this.urlList = urlList;\r\n    this.onload = callback;\r\n    this.bufferList = new Array();\r\n    this.loadCount = 0;\r\n  }\r\n  \r\nBufferLoader.prototype.loadBuffer = function(url, index) {\r\n    // Load buffer asynchronously\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", url, true);\r\n    request.responseType = \"arraybuffer\";\r\n  \r\n    var loader = this;\r\n  \r\n    request.onload = function() {\r\n      // Asynchronously decode the audio file data in request.response\r\n      loader.context.decodeAudioData(\r\n        request.response,\r\n        function(buffer) {\r\n          if (!buffer) {\r\n            alert('error decoding file data: ' + url);\r\n            return;\r\n        }\r\n        loader.bufferList[index] = buffer;\r\n        if (++loader.loadCount == loader.urlList.length)\r\n        loader.onload(loader.bufferList);\r\n    },\r\n    function(error) {\r\n        console.error('decodeAudioData error', error);\r\n    }\r\n    );\r\n}\r\n\r\nrequest.onerror = function() {\r\n    alert('BufferLoader: XHR error');\r\n}\r\n\r\nrequest.send();\r\n}\r\n\r\nBufferLoader.prototype.load = function() {\r\nfor (var i = 0; i < this.urlList.length; ++i)\r\nthis.loadBuffer(this.urlList[i], i);\r\n}\r\n\r\nexport default BufferLoader;\r\n\r\n*/",["206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":8,"column":3,"nodeType":"214","messageId":"215","endLine":8,"endColumn":7},{"ruleId":"212","severity":1,"message":"216","line":8,"column":51,"nodeType":"214","messageId":"215","endLine":8,"endColumn":59},{"ruleId":"217","severity":1,"message":"218","line":44,"column":32,"nodeType":"219","messageId":"220","endLine":44,"endColumn":34},{"ruleId":"212","severity":1,"message":"221","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"223","line":2,"column":29,"nodeType":"214","messageId":"215","endLine":2,"endColumn":38},{"ruleId":"212","severity":1,"message":"224","line":5,"column":36,"nodeType":"214","messageId":"215","endLine":5,"endColumn":53},{"ruleId":"212","severity":1,"message":"225","line":13,"column":5,"nodeType":"214","messageId":"215","endLine":13,"endColumn":26},{"ruleId":"212","severity":1,"message":"221","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"223","line":2,"column":29,"nodeType":"214","messageId":"215","endLine":2,"endColumn":38},{"ruleId":"212","severity":1,"message":"226","line":11,"column":5,"nodeType":"214","messageId":"215","endLine":11,"endColumn":30},{"ruleId":"212","severity":1,"message":"227","line":17,"column":7,"nodeType":"214","messageId":"215","endLine":17,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":8,"column":5,"nodeType":"230","messageId":"231","endLine":10,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":10,"column":5,"nodeType":"230","messageId":"231","endLine":13,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":10,"column":5,"nodeType":"230","messageId":"231","endLine":13,"endColumn":6},{"ruleId":"212","severity":1,"message":"232","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":15,"endColumn":4},{"ruleId":"212","severity":1,"message":"232","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":15,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":5,"column":5,"nodeType":"230","messageId":"231","endLine":8,"endColumn":6},{"ruleId":"212","severity":1,"message":"233","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":38},{"ruleId":"217","severity":1,"message":"234","line":11,"column":41,"nodeType":"219","messageId":"220","endLine":11,"endColumn":43},{"ruleId":"217","severity":1,"message":"234","line":11,"column":88,"nodeType":"219","messageId":"220","endLine":11,"endColumn":90},{"ruleId":"217","severity":1,"message":"234","line":36,"column":41,"nodeType":"219","messageId":"220","endLine":36,"endColumn":43},{"ruleId":"217","severity":1,"message":"234","line":36,"column":88,"nodeType":"219","messageId":"220","endLine":36,"endColumn":90},{"ruleId":"212","severity":1,"message":"235","line":20,"column":27,"nodeType":"214","messageId":"215","endLine":20,"endColumn":39},{"ruleId":"217","severity":1,"message":"234","line":12,"column":39,"nodeType":"219","messageId":"220","endLine":12,"endColumn":41},{"ruleId":"217","severity":1,"message":"234","line":34,"column":19,"nodeType":"219","messageId":"220","endLine":34,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":66,"column":19,"nodeType":"219","messageId":"220","endLine":66,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":103,"column":43,"nodeType":"219","messageId":"220","endLine":103,"endColumn":45},{"ruleId":"212","severity":1,"message":"236","line":113,"column":7,"nodeType":"214","messageId":"215","endLine":113,"endColumn":17},{"ruleId":"212","severity":1,"message":"221","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"237","line":2,"column":16,"nodeType":"214","messageId":"215","endLine":2,"endColumn":22},{"ruleId":"212","severity":1,"message":"238","line":2,"column":24,"nodeType":"214","messageId":"215","endLine":2,"endColumn":27},{"ruleId":"212","severity":1,"message":"223","line":2,"column":29,"nodeType":"214","messageId":"215","endLine":2,"endColumn":38},{"ruleId":"212","severity":1,"message":"239","line":2,"column":52,"nodeType":"214","messageId":"215","endLine":2,"endColumn":55},{"ruleId":"240","severity":1,"message":"241","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":14,"endColumn":2},{"ruleId":"212","severity":1,"message":"244","line":7,"column":7,"nodeType":"214","messageId":"215","endLine":7,"endColumn":31},{"ruleId":"217","severity":1,"message":"234","line":93,"column":52,"nodeType":"219","messageId":"220","endLine":93,"endColumn":54},{"ruleId":"217","severity":1,"message":"234","line":121,"column":61,"nodeType":"219","messageId":"220","endLine":121,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":5,"column":23,"nodeType":"247","messageId":"248","endLine":5,"endColumn":34},{"ruleId":"217","severity":1,"message":"234","line":27,"column":32,"nodeType":"219","messageId":"220","endLine":27,"endColumn":34},{"ruleId":"217","severity":1,"message":"234","line":47,"column":40,"nodeType":"219","messageId":"220","endLine":47,"endColumn":42},{"ruleId":"208","replacedBy":"249"},{"ruleId":"210","replacedBy":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'gameOver' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'connect' is defined but never used.","'call' is defined but never used.","'takeEvery' is defined but never used.","'PAUSE_RESUME_GAME' is defined but never used.","'COLLISION_BLOCK_SOUND' is defined but never used.","'COLLISION_BLOCK_SOUND_ALT' is defined but never used.","'getCanMoveDown' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'render' is defined but never used.","'copy2dArray' is defined but never used.","Expected '===' and instead saw '=='.","'scoredPoints' is assigned a value but never used.","'isGameOver' is assigned a value but never used.","'select' is defined but never used.","'put' is defined but never used.","'all' is defined but never used.","require-yield","This generator function does not have 'yield'.","FunctionDeclaration","missingYield","'DEFAULT_BACKGROUND_SOUND' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",["251"],["252"],"no-global-assign","no-unsafe-negation"]